version: '3.5'

services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:2.3-latest
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - milvus

  mongodb:
    container_name: mongodb
    image: mongodb/mongodb-community-server:latest
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mongodb:/data/db
    ports:
      - "27017:27017"
    restart: always
    networks:
      - milvus

  frontend:
    container_name: frontend
    image: zezhuyu/ic_agent_frontend:latest
    ports:
      - 3000:3000
    # depends_on:
    #   - "backend"
    restart: always
    networks:
      - milvus

  # backend:
  #   container_name: backend
  #   image: zezhuyu/ic_agent_backend:latest
  #   ports:
  #     - 65500:65500
  #   environment:
  #     - MONGO_URI=mongodb:27017
  #     - LLM_URI=host.docker.internal:50051
  #     - MILVUS_URI=standalone:19530
  #   depends_on:
  #     - "standalone"
  #     - "mongodb"
  #   restart: always
  #   networks:
  #     - milvus

  nginx:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - "frontend"
    networks:
      - milvus

networks:
  milvus:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
